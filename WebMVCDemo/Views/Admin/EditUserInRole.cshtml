@model List<UserRoleViewModel>

@{

    var roleId = ViewBag.roleId;
}

<form method="post">
    <div class="card">
        <div class="card-header">
            <h2>Add or remove users from the given role</h2>
        </div>
        <div class="card-body">
            <!--We need to use a for loop with an indexer instead of a foreach loop
                The Model binder uses unique names to map the values to the controller
                action list parameter. If we use a for each loop, the names are not unique
                and therefore the model does not bind them to the parameter. When we use the
                parameter in the controller, the parameter is empty because we have the ASP.net
                did not bind it. This is why we kept getting the null exception error.-->
            @for(int i = 0; i < Model.Count; i++)
            {

              <div class="form-check m-1">
                  <input type="hidden" asp-for="@Model[i].UserId" />
                  <input type="hidden" asp-for="@Model[i].UserName"/>
                  <input class="form-check-input" type="checkbox" asp-for="@Model[i].IsSelected"/>
                  <label class="form-check-label" asp-for="@Model[i].IsSelected">
                      @Model[i].UserName
                  </label>
              </div>
                   
            }
        </div>
        <div class="card-footer">
            <input type="submit" value ="Update" class="btn btn-primary" style="width:auto" />
            <a asp-action="ListRoles" asp-controller="Admin" class="btn btn-primary" style="width:auto">Cancel</a>
        </div>
    </div>
</form>

